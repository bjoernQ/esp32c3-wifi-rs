name: CI

on:
  pull_request:
    branches:
      - main
  push:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # Examples:
  SSID: ""
  PASSWORD: ""
  STATIC_IP: ""
  GATEWAY_IP: ""
  DEFMT_LOG: "trace"

# Cancel any currently running workflows from the same PR, branch, or
# tag when a new workflow is triggered.
#
# https://stackoverflow.com/a/66336834
concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}

jobs:
  formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: esp-rs/xtensa-toolchain@v1.5
        with:
          default: true
          buildtargets: esp32
          ldproxy: false
      - uses: Swatinem/rust-cache@v1

      - name: check-fmt
        run: cargo fmt --check

  checks-xtensa:
    strategy:
      matrix:
        chip: ["esp32", "esp32s2", "esp32s3"]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: esp-rs/xtensa-toolchain@v1.5
        with:
          default: true
          buildtargets: ${{ matrix.chip }}
          ldproxy: false
      - uses: Swatinem/rust-cache@v1

      - name: check
        run: cd examples-${{ matrix.chip }} && cargo check
      - name: check (common features)
        run: cd examples-${{ matrix.chip }} && cargo check --features=async,wifi,esp-now,embassy-net,log
      - name: check (common features + defmt)
        run: cd examples-${{ matrix.chip }} && cargo check --no-default-features --features=${{ matrix.chip }},async,wifi,esp-now,embassy-net,defmt
      - name: check (dhcp)
        run: cd examples-${{ matrix.chip }} && cargo build --release --example=dhcp --features=wifi
      - name: check (static_ip)
        run: cd examples-${{ matrix.chip }} && cargo build --release --example=static_ip --features=wifi
      - name: check (esp_now)
        run: cd examples-${{ matrix.chip }} && cargo build --release --example=esp_now --features=esp-now
      - name: check (embassy_esp_now)
        run: cd examples-${{ matrix.chip }} && cargo build --release --example=embassy_esp_now --features=async,esp-now
      - name: check (esp_now_duplex)
        run: cd examples-${{ matrix.chip }} && cargo build --release --example=esp_now_duplex --features=async,esp-now
      - name: check (esp_now_async_duplex)
        run: cd examples-${{ matrix.chip }} && cargo build --release --example=esp_now_async_duplex --features=async,esp-now
      - name: check (embassy_dhcp)
        run: cd examples-${{ matrix.chip }} && cargo build --release --example=embassy_dhcp --features=async,wifi,embassy-net
      - name: check (embassy_access_point)
        run: cd examples-${{ matrix.chip }} && cargo build --release --example=embassy_access_point --features=async,wifi,embassy-net

      - name: check (common features + ble)
        if: ${{ matrix.chip == 'esp32' || matrix.chip == 'esp32s3' }}
        run: cd examples-${{ matrix.chip }} && cargo check --features=async,wifi,ble,esp-now,embassy-net,log
      - name: check (common features + ble + defmt)
        if: ${{ matrix.chip == 'esp32' || matrix.chip == 'esp32s3' }}
        run: cd examples-${{ matrix.chip }} && cargo check --no-default-features --features=${{ matrix.chip }},async,wifi,ble,esp-now,embassy-net,defmt
      - name: check (ble)
        if: ${{ matrix.chip == 'esp32' || matrix.chip == 'esp32s3' }}
        run: cd examples-${{ matrix.chip }} && cargo build --release --example=ble --features=ble
      - name: check (async_ble)
        if: ${{ matrix.chip == 'esp32' || matrix.chip == 'esp32s3' }}
        run: cd examples-${{ matrix.chip }} && cargo build --release --example=async_ble --features=async,ble
      - name: check (coex)
        if: ${{ matrix.chip == 'esp32' || matrix.chip == 'esp32s3' }}
        run: cd examples-${{ matrix.chip }} && cargo build --release --example=coex --features=wifi,ble,coex

  checks-riscv:
    strategy:
      matrix:
        chip: ["esp32c2", "esp32c3", "esp32c6"]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@v1
        with:
          target: riscv32imc-unknown-none-elf
          toolchain: nightly-2023-05-16
          components: rust-src,rustfmt
      - uses: Swatinem/rust-cache@v1

      - name: check
        run: cd examples-${{ matrix.chip }} && cargo +nightly-2023-05-16 check
      - name: check (common features)
        run: cd examples-${{ matrix.chip }} && cargo +nightly-2023-05-16 check --features=async,wifi,esp-now,embassy-net,log
      - name: check (common features + defmt)
        run: cd examples-${{ matrix.chip }} && cargo +nightly-2023-05-16 check --no-default-features --features=${{ matrix.chip }},async,wifi,esp-now,embassy-net,defmt
      - name: check (dhcp)
        run: cd examples-${{ matrix.chip }} && cargo +nightly-2023-05-16 build --release --example=dhcp --features=wifi
      - name: check (static_ip)
        run: cd examples-${{ matrix.chip }} && cargo +nightly-2023-05-16 build --release --example=static_ip --features=wifi
      - name: check (esp_now)
        run: cd examples-${{ matrix.chip }} && cargo +nightly-2023-05-16 build --release --example=esp_now --features=esp-now
      - name: check (embassy_esp_now)
        run: cd examples-${{ matrix.chip }} && cargo +nightly-2023-05-16 build --release --example=embassy_esp_now --features=async,esp-now
      - name: check (esp_now_duplex)
        run: cd examples-${{ matrix.chip }} && cargo +nightly-2023-05-16 build --release --example=esp_now_duplex --features=async,esp-now
      - name: check (esp_now_async_duplex)
        run: cd examples-${{ matrix.chip }} && cargo +nightly-2023-05-16 build --release --example=esp_now_async_duplex --features=async,esp-now
      - name: check (embassy_dhcp)
        run: cd examples-${{ matrix.chip }} && cargo +nightly-2023-05-16 build --release --example=embassy_dhcp --features=async,wifi,embassy-net
      - name: check (embassy_access_point)
        run: cd examples-${{ matrix.chip }} && cargo +nightly-2023-05-16 build --release --example=embassy_access_point --features=async,wifi,embassy-net

      - name: check (common features + ble)
        if: ${{ matrix.chip == 'esp32c2' || matrix.chip == 'esp32c3' }}
        run: cd examples-${{ matrix.chip }} && cargo +nightly-2023-05-16 check --features=async,wifi,ble,esp-now,embassy-net,log
      - name: check (common features + ble + defmt)
        if: ${{ matrix.chip == 'esp32c2' || matrix.chip == 'esp32c3' }}
        run: cd examples-${{ matrix.chip }} && cargo +nightly-2023-05-16 check --no-default-features --features=${{ matrix.chip }},async,wifi,ble,esp-now,embassy-net,defmt
      - name: check (ble)
        if: ${{ matrix.chip == 'esp32c2' || matrix.chip == 'esp32c3' }}
        run: cd examples-${{ matrix.chip }} && cargo +nightly-2023-05-16 build --release --example=ble --features=ble
      - name: check (async_ble)
        if: ${{ matrix.chip == 'esp32c2' || matrix.chip == 'esp32c3' }}
        run: cd examples-${{ matrix.chip }} && cargo +nightly-2023-05-16 build --release --example=async_ble --features=async,ble
      - name: check (coex)
        if: ${{ matrix.chip == 'esp32c3' }}
        run: cd examples-${{ matrix.chip }} && cargo +nightly-2023-05-16 build --release --example=coex --features=wifi,ble,coex
